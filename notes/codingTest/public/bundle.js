/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/binary_search.ts":
/*!******************************!*\
  !*** ./src/binary_search.ts ***!
  \******************************/
/***/ (() => {

eval("\nconst _arr = [1, 3, 5, 6, 9, 11, 13, 15, 17, 19];\nfunction binarySearchRecur(array, target, start, end) {\n    if (start > end)\n        return -1;\n    const mid = Math.floor((start + end) / 2);\n    if (target === array[mid])\n        return mid;\n    if (target < array[mid]) {\n        return binarySearchRecur(array, target, start, mid - 1);\n    }\n    else {\n        return binarySearchRecur(array, target, mid + 1, end);\n    }\n}\nconsole.time(\"binarySearchRecur\");\nconsole.log(binarySearchRecur(_arr, 6, 0, _arr.length - 1));\nconsole.timeEnd(\"binarySearchRecur\");\nfunction binarySearchLoop(array, target, start, end) {\n    while (start <= end) {\n        const mid = Math.floor((start + end) / 2);\n        if (target === array[mid])\n            return mid;\n        if (array[mid] > target) {\n            end = mid - 1;\n        }\n        else {\n            start = mid + 1;\n        }\n    }\n    return -1;\n}\nconsole.time(\"binarySearchLoop\");\nconsole.log(binarySearchLoop(_arr, 6, 0, _arr.length - 1));\nconsole.timeEnd(\"binarySearchLoop\");\n// 부품 찾기\nconst _n = [8, 3, 7, 11, 13, 14, 16, 18, 20, 9, 2, 6, 4, 19];\nconst _m = [5, 7, 9, 17];\nfunction findParts(n, m) {\n    let result = \"\";\n    n.sort((a, b) => a - b);\n    for (let i = 0; i < m.length; i++) {\n        if (i > 0)\n            result += \" \";\n        if (_binary(n, m[i], 0, n.length - 1) > 0) {\n            result += \"yes\";\n        }\n        else {\n            result += \"no\";\n        }\n    }\n    return result;\n}\nfunction _binary(array, target, start, end) {\n    if (start > end)\n        return -1;\n    const mid = Math.floor((start + end) / 2);\n    if (target === array[mid])\n        return mid;\n    if (target < array[mid]) {\n        return _binary(array, target, start, mid - 1);\n    }\n    else {\n        return _binary(array, target, mid + 1, end);\n    }\n}\nconsole.time(\"findParts\");\nconsole.log(findParts(_n, _m));\nconsole.timeEnd(\"findParts\");\n// 떡볶이 떡 만들기\nconst _cakes = [19, 15, 10, 17];\nconst _target = 6;\nconst _longCakes = Array.from({ length: 1000 }, () => Math.floor(Math.random() * 1000000));\nconst _longTarget = 34920;\nfunction makeCake(cakes, target) {\n    cakes.sort((a, b) => b - a);\n    let height = cakes[0];\n    while (height > 0) {\n        let cuts = 0;\n        for (let i = 0; i < cakes.length; i++) {\n            const cut = cakes[i] - height;\n            if (cut > 0) {\n                cuts += cut;\n            }\n            else\n                break;\n        }\n        if (cuts >= target) {\n            return height;\n        }\n        else {\n            height--;\n        }\n    }\n    return -1;\n}\nconsole.time(\"makeCake\");\nconsole.log(makeCake(_longCakes, _longTarget));\nconsole.timeEnd(\"makeCake\");\nfunction makeCakeBinary(cakes, target) {\n    let result = 0;\n    let start = 0;\n    let end = Math.max(...cakes);\n    while (start <= end) {\n        let cuts = 0;\n        const mid = Math.floor((start + end) / 2);\n        for (let i = 0; i < cakes.length; i++) {\n            const cut = cakes[i] - mid;\n            if (cut > 0) {\n                cuts += cut;\n            }\n        }\n        if (cuts < target) {\n            end = mid - 1;\n        }\n        else {\n            result = mid;\n            start = mid + 1;\n        }\n    }\n    return result;\n}\nconsole.time(\"makeCakeBinary\");\nconsole.log(makeCakeBinary(_longCakes, _longTarget));\nconsole.timeEnd(\"makeCakeBinary\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/binary_search.ts\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/binary_search.ts"]();
/******/ 	
/******/ })()
;
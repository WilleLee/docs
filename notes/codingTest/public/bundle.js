/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/examples/graph.ts":
/*!*******************************!*\
  !*** ./src/examples/graph.ts ***!
  \*******************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconsole.log(\"hello\");\n// 팀 결성\n// 학생들 0 ~ N까지 번호 부여\n// 처음엔 서로가 각각 팀 (N + 1개의 팀)\n// 선생님 : 팀 합치기 연산, 같은 팀 여부 확인 연산 사용 가능\n// 팀 합치기 : [0, a, b]\n// 팀 여부 확인 : [1, a, b] => YES or NO 출력\nconst N = 7;\nconst inputs = [\n    [0, 1, 3],\n    [1, 1, 7],\n    [0, 7, 6],\n    [1, 7, 1],\n    [0, 3, 7],\n    [0, 4, 2],\n    [0, 1, 1],\n    [1, 1, 1],\n];\nconst parentTable = Array(N)\n    .fill(0)\n    .map((_, index) => index);\nfunction findRoot(parent, x) {\n    if (parent[x] !== x) {\n        parent[x] = findRoot(parent, parent[x]);\n    }\n    return parent[x];\n}\nfunction union(parent, a, b) {\n    const rootA = findRoot(parent, a);\n    const rootB = findRoot(parent, b);\n    if (rootA < rootB) {\n        parent[rootB] = rootA;\n    }\n    else {\n        parent[rootA] = rootB;\n    }\n}\nfor (let i = 0; i < inputs.length; i++) {\n    const [command, a, b] = inputs[i];\n    if (command === 0) {\n        // 합치기\n        union(parentTable, a, b);\n    }\n    else {\n        // 같은 팀 여부 확인\n        if (findRoot(parentTable, a) === findRoot(parentTable, b)) {\n            console.log(\"YES\");\n        }\n        else {\n            console.log(\"NO\");\n        }\n    }\n}\n// 도시 분할 계획\n// 마을 도로 공사\n// N개의 집, M개의 길, 양방향\n// 2개의 분리된 마을로 분할\n// 분할된 마을 내에서는 임의의 두 집 사이 경로가 항상 존재해야 함\n// [a, b, cost] 집 - 집 - 비용\nconst H = 7;\nconst costInputs = [\n    [1, 2, 3],\n    [1, 3, 2],\n    [3, 2, 1],\n    [2, 5, 2],\n    [3, 4, 4],\n    [7, 3, 6],\n    [5, 1, 5],\n    [1, 6, 2],\n    [6, 4, 1],\n    [6, 5, 3],\n    [4, 5, 3],\n    [6, 7, 4],\n];\nconst houseParent = Array(H + 1)\n    .fill(0)\n    .map((_, index) => index);\nfunction findRootHouse(parent, x) {\n    if (parent[x] !== x) {\n        parent[x] = findRootHouse(parent, parent[x]);\n    }\n    return parent[x];\n}\nfunction unionHouse(parent, a, b) {\n    const rootA = findRootHouse(parent, a);\n    const rootB = findRootHouse(parent, b);\n    if (rootA < rootB) {\n        parent[rootB] = rootA;\n    }\n    else {\n        parent[rootA] = rootB;\n    }\n}\ncostInputs.sort((a, b) => a[2] - b[2]);\nlet totalCost = 0;\nlet last = 0;\nconsole.log(\"cost inputs\", costInputs);\nfor (let i = 0; i < costInputs.length; i++) {\n    const [a, b, cost] = costInputs[i];\n    if (findRootHouse(houseParent, a) !== findRootHouse(houseParent, b)) {\n        unionHouse(houseParent, a, b);\n        totalCost += cost;\n        last = cost;\n    }\n}\nconsole.log(totalCost - last);\n// 커리큘럼\n// N개의 강의, 모든 강의는 1~N의 번호 가짐\n// [수강시간, ...선수과목번호들]\n// N개의 강의 각각에 대해서 수강하기까지 걸리는 최소 시간 출력\nconst L = 5;\nconst lectureInputs = [[10], [10, 1], [4, 1], [4, 3, 1], [3, 3]];\nconst lectureIndegree = Array(L + 1).fill(0);\nconst lectureGraph = Array(L + 1).fill([]);\nconst lectureTimes = Array(L + 1).fill(0);\nfor (let i = 0; i < lectureInputs.length; i++) {\n    const [time, ...preLecs] = lectureInputs[i];\n    lectureTimes[i + 1] = time;\n    for (let j = 0; j < preLecs.length; j++) {\n        lectureIndegree[i + 1] += 1;\n        lectureGraph[preLecs[j]] = [...lectureGraph[preLecs[j]], i + 1];\n    }\n}\nconsole.log(\"indegree\", lectureIndegree);\nconsole.log(\"graph\", lectureGraph);\nconsole.log(\"times\", lectureTimes);\nfunction topo() {\n    const result = [...lectureTimes];\n    const queue = [];\n    for (let i = 1; i <= L; i++) {\n        if (lectureIndegree[i] === 0) {\n            queue.push(i);\n        }\n    }\n    console.log(result);\n    console.log(queue);\n    while (queue.length > 0) {\n        const now = queue.shift();\n        for (let i = 0; i < lectureGraph[now].length; i++) {\n            const target = lectureGraph[now][i];\n            console.log(now, \"->\", target);\n            result[target] = Math.max(result[target], result[now] + lectureTimes[target]);\n            lectureIndegree[target] -= 1;\n            if (lectureIndegree[target] === 0) {\n                queue.push(target);\n            }\n        }\n    }\n    for (let i = 1; i <= L; i++) {\n        console.log(result[i]);\n    }\n}\ntopo();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/examples/graph.ts\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/examples/graph.ts"](0, __webpack_exports__);
/******/ 	
/******/ })()
;
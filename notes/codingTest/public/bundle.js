/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/shortest_path.ts":
/*!******************************!*\
  !*** ./src/shortest_path.ts ***!
  \******************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst INF = Infinity;\nconst graph = [\n    [],\n    [\n        [2, 2],\n        [3, 5],\n        [4, 1],\n    ], // 1번 노드에서 2로 가는 비용 = 2, 3으로 가는 비용 = 5 ...\n    [\n        [3, 3],\n        [4, 2],\n    ],\n    [\n        [2, 3],\n        [6, 5],\n    ],\n    [\n        [3, 3],\n        [5, 1],\n    ],\n    [\n        [3, 1],\n        [6, 2],\n    ],\n    [],\n];\n// console.log(\"hello\");\nconst V = graph.length - 1; // 노드 개수\nconst S = 1; // 시작 노드\nconst visited1 = Array(V + 1).fill(false);\nconst distance1 = Array(V + 1).fill(INF);\nfunction getSmallestNode() {\n    let min = INF;\n    let index = 0;\n    for (let i = 1; i <= V; i++) {\n        if (distance1[i] < min && !visited1[i]) {\n            min = distance1[i];\n            index = i;\n        }\n    }\n    return index;\n}\nfunction simpleDijkstra(start) {\n    // 시작 노드에 대하여 초기화\n    visited1[start] = true;\n    distance1[start] = 0;\n    for (let i = 0; i < graph[start].length; i++) {\n        const [node, cost] = graph[start][i];\n        distance1[node] = cost;\n    }\n    // 시작 노드를 제외한 전체 n - 1개의 노드에 대해 반복\n    for (let i = 0; i < V - 1; i++) {\n        const now = getSmallestNode();\n        visited1[now] = true;\n        for (let j = 0; j < graph[now].length; j++) {\n            const [n, c] = graph[now][j];\n            const cost = distance1[now] + c;\n            if (cost < distance1[n]) {\n                distance1[n] = cost;\n            }\n        }\n    }\n}\nconsole.time(\"simpleDijkstra\");\nsimpleDijkstra(S);\nconsole.timeEnd(\"simpleDijkstra\");\nfor (let i = 1; i <= V; i++) {\n    if (distance1[i] === INF) {\n        console.log(\"도달할 수 없습니다.\");\n    }\n    else {\n        console.log(i, distance1[i]);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2hvcnRlc3RfcGF0aC50cyIsIm1hcHBpbmdzIjoiOztBQUFBLE1BQU0sR0FBRyxHQUFHLFFBQVEsQ0FBQztBQUVyQixNQUFNLEtBQUssR0FBRztJQUNaLEVBQUU7SUFDRjtRQUNFLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQztRQUNOLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQztRQUNOLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQztLQUNQLEVBQUUsMENBQTBDO0lBQzdDO1FBQ0UsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDO1FBQ04sQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDO0tBQ1A7SUFDRDtRQUNFLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQztRQUNOLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQztLQUNQO0lBQ0Q7UUFDRSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUM7UUFDTixDQUFDLENBQUMsRUFBRSxDQUFDLENBQUM7S0FDUDtJQUNEO1FBQ0UsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDO1FBQ04sQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDO0tBQ1A7SUFDRCxFQUFFO0NBQ0gsQ0FBQztBQUVGLHdCQUF3QjtBQUV4QixNQUFNLENBQUMsR0FBRyxLQUFLLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQyxDQUFDLFFBQVE7QUFDcEMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsUUFBUTtBQUVyQixNQUFNLFFBQVEsR0FBRyxLQUFLLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztBQUMxQyxNQUFNLFNBQVMsR0FBRyxLQUFLLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQztBQUV6QyxTQUFTLGVBQWU7SUFDdEIsSUFBSSxHQUFHLEdBQUcsR0FBRyxDQUFDO0lBQ2QsSUFBSSxLQUFLLEdBQUcsQ0FBQyxDQUFDO0lBRWQsS0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRSxDQUFDO1FBQzVCLElBQUksU0FBUyxDQUFDLENBQUMsQ0FBQyxHQUFHLEdBQUcsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDO1lBQ3ZDLEdBQUcsR0FBRyxTQUFTLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDbkIsS0FBSyxHQUFHLENBQUMsQ0FBQztRQUNaLENBQUM7SUFDSCxDQUFDO0lBRUQsT0FBTyxLQUFLLENBQUM7QUFDZixDQUFDO0FBRUQsU0FBUyxjQUFjLENBQUMsS0FBYTtJQUNuQyxpQkFBaUI7SUFDakIsUUFBUSxDQUFDLEtBQUssQ0FBQyxHQUFHLElBQUksQ0FBQztJQUN2QixTQUFTLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBQ3JCLEtBQUssSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxLQUFLLENBQUMsS0FBSyxDQUFDLENBQUMsTUFBTSxFQUFFLENBQUMsRUFBRSxFQUFFLENBQUM7UUFDN0MsTUFBTSxDQUFDLElBQUksRUFBRSxJQUFJLENBQUMsR0FBRyxLQUFLLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDckMsU0FBUyxDQUFDLElBQUksQ0FBQyxHQUFHLElBQUksQ0FBQztJQUN6QixDQUFDO0lBRUQsa0NBQWtDO0lBQ2xDLEtBQUssSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFLENBQUM7UUFDL0IsTUFBTSxHQUFHLEdBQUcsZUFBZSxFQUFFLENBQUM7UUFDOUIsUUFBUSxDQUFDLEdBQUcsQ0FBQyxHQUFHLElBQUksQ0FBQztRQUVyQixLQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDLE1BQU0sRUFBRSxDQUFDLEVBQUUsRUFBRSxDQUFDO1lBQzNDLE1BQU0sQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEdBQUcsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQzdCLE1BQU0sSUFBSSxHQUFHLFNBQVMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUM7WUFDaEMsSUFBSSxJQUFJLEdBQUcsU0FBUyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUM7Z0JBQ3hCLFNBQVMsQ0FBQyxDQUFDLENBQUMsR0FBRyxJQUFJLENBQUM7WUFDdEIsQ0FBQztRQUNILENBQUM7SUFDSCxDQUFDO0FBQ0gsQ0FBQztBQUVELE9BQU8sQ0FBQyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsQ0FBQztBQUUvQixjQUFjLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFFbEIsT0FBTyxDQUFDLE9BQU8sQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDO0FBRWxDLEtBQUssSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsQ0FBQztJQUM1QixJQUFJLFNBQVMsQ0FBQyxDQUFDLENBQUMsS0FBSyxHQUFHLEVBQUUsQ0FBQztRQUN6QixPQUFPLENBQUMsR0FBRyxDQUFDLGFBQWEsQ0FBQyxDQUFDO0lBQzdCLENBQUM7U0FBTSxDQUFDO1FBQ04sT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEVBQUUsU0FBUyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDL0IsQ0FBQztBQUNILENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jb2RpbmdfdGVzdC8uL3NyYy9zaG9ydGVzdF9wYXRoLnRzP2Q4YTciXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgSU5GID0gSW5maW5pdHk7XG5cbmNvbnN0IGdyYXBoID0gW1xuICBbXSxcbiAgW1xuICAgIFsyLCAyXSxcbiAgICBbMywgNV0sXG4gICAgWzQsIDFdLFxuICBdLCAvLyAx67KIIOuFuOuTnOyXkOyEnCAy66GcIOqwgOuKlCDruYTsmqkgPSAyLCAz7Jy866GcIOqwgOuKlCDruYTsmqkgPSA1IC4uLlxuICBbXG4gICAgWzMsIDNdLFxuICAgIFs0LCAyXSxcbiAgXSxcbiAgW1xuICAgIFsyLCAzXSxcbiAgICBbNiwgNV0sXG4gIF0sXG4gIFtcbiAgICBbMywgM10sXG4gICAgWzUsIDFdLFxuICBdLFxuICBbXG4gICAgWzMsIDFdLFxuICAgIFs2LCAyXSxcbiAgXSxcbiAgW10sXG5dO1xuXG4vLyBjb25zb2xlLmxvZyhcImhlbGxvXCIpO1xuXG5jb25zdCBWID0gZ3JhcGgubGVuZ3RoIC0gMTsgLy8g64W465OcIOqwnOyImFxuY29uc3QgUyA9IDE7IC8vIOyLnOyekSDrhbjrk5xcblxuY29uc3QgdmlzaXRlZDEgPSBBcnJheShWICsgMSkuZmlsbChmYWxzZSk7XG5jb25zdCBkaXN0YW5jZTEgPSBBcnJheShWICsgMSkuZmlsbChJTkYpO1xuXG5mdW5jdGlvbiBnZXRTbWFsbGVzdE5vZGUoKSB7XG4gIGxldCBtaW4gPSBJTkY7XG4gIGxldCBpbmRleCA9IDA7XG5cbiAgZm9yIChsZXQgaSA9IDE7IGkgPD0gVjsgaSsrKSB7XG4gICAgaWYgKGRpc3RhbmNlMVtpXSA8IG1pbiAmJiAhdmlzaXRlZDFbaV0pIHtcbiAgICAgIG1pbiA9IGRpc3RhbmNlMVtpXTtcbiAgICAgIGluZGV4ID0gaTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gaW5kZXg7XG59XG5cbmZ1bmN0aW9uIHNpbXBsZURpamtzdHJhKHN0YXJ0OiBudW1iZXIpIHtcbiAgLy8g7Iuc7J6RIOuFuOuTnOyXkCDrjIDtlZjsl6wg7LSI6riw7ZmUXG4gIHZpc2l0ZWQxW3N0YXJ0XSA9IHRydWU7XG4gIGRpc3RhbmNlMVtzdGFydF0gPSAwO1xuICBmb3IgKGxldCBpID0gMDsgaSA8IGdyYXBoW3N0YXJ0XS5sZW5ndGg7IGkrKykge1xuICAgIGNvbnN0IFtub2RlLCBjb3N0XSA9IGdyYXBoW3N0YXJ0XVtpXTtcbiAgICBkaXN0YW5jZTFbbm9kZV0gPSBjb3N0O1xuICB9XG5cbiAgLy8g7Iuc7J6RIOuFuOuTnOulvCDsoJzsmbjtlZwg7KCE7LK0IG4gLSAx6rCc7J2YIOuFuOuTnOyXkCDrjIDtlbQg67CY67O1XG4gIGZvciAobGV0IGkgPSAwOyBpIDwgViAtIDE7IGkrKykge1xuICAgIGNvbnN0IG5vdyA9IGdldFNtYWxsZXN0Tm9kZSgpO1xuICAgIHZpc2l0ZWQxW25vd10gPSB0cnVlO1xuXG4gICAgZm9yIChsZXQgaiA9IDA7IGogPCBncmFwaFtub3ddLmxlbmd0aDsgaisrKSB7XG4gICAgICBjb25zdCBbbiwgY10gPSBncmFwaFtub3ddW2pdO1xuICAgICAgY29uc3QgY29zdCA9IGRpc3RhbmNlMVtub3ddICsgYztcbiAgICAgIGlmIChjb3N0IDwgZGlzdGFuY2UxW25dKSB7XG4gICAgICAgIGRpc3RhbmNlMVtuXSA9IGNvc3Q7XG4gICAgICB9XG4gICAgfVxuICB9XG59XG5cbmNvbnNvbGUudGltZShcInNpbXBsZURpamtzdHJhXCIpO1xuXG5zaW1wbGVEaWprc3RyYShTKTtcblxuY29uc29sZS50aW1lRW5kKFwic2ltcGxlRGlqa3N0cmFcIik7XG5cbmZvciAobGV0IGkgPSAxOyBpIDw9IFY7IGkrKykge1xuICBpZiAoZGlzdGFuY2UxW2ldID09PSBJTkYpIHtcbiAgICBjb25zb2xlLmxvZyhcIuuPhOuLrO2VoCDsiJgg7JeG7Iq164uI64ukLlwiKTtcbiAgfSBlbHNlIHtcbiAgICBjb25zb2xlLmxvZyhpLCBkaXN0YW5jZTFbaV0pO1xuICB9XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/shortest_path.ts\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/shortest_path.ts"](0, __webpack_exports__);
/******/ 	
/******/ })()
;
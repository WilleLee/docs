/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/기출문제/shortest_path/화성_탐사.ts":
/*!*****************************************!*\
  !*** ./src/기출문제/shortest_path/화성_탐사.ts ***!
  \*****************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n// n * m 2차원 공간\nconst INF = Infinity;\nconst test1N = 3;\nconst test1M = 3;\nconst test1 = [\n    [5, 5, 4],\n    [3, 9, 1],\n    [3, 2, 7],\n];\nclass Heap {\n    queue;\n    constructor() {\n        this.queue = [];\n    }\n    size() {\n        return this.queue.length;\n    }\n    swap(index1, index2) {\n        [this.queue[index1], this.queue[index2]] = [\n            this.queue[index2],\n            this.queue[index1],\n        ];\n    }\n    add(item) {\n        this.queue.push(item);\n        this.bubbleUp();\n    }\n    bubbleUp() {\n        let index = this.size() - 1;\n        let parentIndex = Math.floor((index - 1) / 2);\n        while (this.queue[parentIndex] &&\n            this.queue[parentIndex] > this.queue[index]) {\n            this.swap(index, parentIndex);\n            index = parentIndex;\n            parentIndex = Math.floor((index - 1) / 2);\n        }\n    }\n    pop() {\n        if (this.size() === 1) {\n            return this.queue.pop();\n        }\n        const value = this.queue[0];\n        this.queue[0] = this.queue.pop();\n        this.bubbleDown();\n        return value;\n    }\n    bubbleDown() {\n        let index = 0;\n        let leftIndex = 1;\n        let rightIndex = 2;\n        while ((this.queue[leftIndex] && this.queue[leftIndex] < this.queue[index]) ||\n            (this.queue[rightIndex] && this.queue[rightIndex] < this.queue[index])) {\n            let smallerIndex = leftIndex;\n            if (this.queue[rightIndex] &&\n                this.queue[rightIndex] < this.queue[leftIndex]) {\n                smallerIndex = rightIndex;\n            }\n            this.swap(index, smallerIndex);\n            index = smallerIndex;\n            leftIndex = index * 2 + 1;\n            rightIndex = index * 2 + 2;\n        }\n    }\n}\nconst distance1 = Array(test1N)\n    .fill([])\n    .map(() => Array(test1M).fill(INF));\nfunction dijkstra(start, graph, distance, n, m) {\n    const heap = new Heap();\n    const startDistance = graph[start[0]][start[1]];\n    distance[start[0]][start[1]] = startDistance;\n    heap.add([startDistance, start]);\n    while (heap.size() > 0) {\n        const [distanceToNow, [nowX, nowY]] = heap.pop();\n        if (distance[nowY][nowX] < distanceToNow) {\n            continue;\n        }\n        const nextNodes = [];\n        if (nowX - 1 >= 0) {\n            nextNodes.push([nowX - 1, nowY]);\n        }\n        if (nowY - 1 >= 0) {\n            nextNodes.push([nowX, nowY - 1]);\n        }\n        if (nowX + 1 < graph[0].length) {\n            nextNodes.push([nowX + 1, nowY]);\n        }\n        if (nowY + 1 < graph.length) {\n            nextNodes.push([nowX, nowY + 1]);\n        }\n        nextNodes.forEach((nextNode) => {\n            const [x, y] = nextNode;\n            const distanceToNext = graph[y][x];\n            const cost = distanceToNow + distanceToNext;\n            if (cost < distance[y][x]) {\n                distance[y][x] = cost;\n                heap.add([cost, [x, y]]);\n            }\n        });\n        console.log(distance);\n    }\n    console.log(\"distance result\", distance);\n    return distance[m - 1][n - 1];\n}\nconst answer1 = dijkstra([0, 0], test1, distance1, test1N, test1M);\nconsole.log(\"answer 1\", answer1);\nconst test2N = 7, test2M = 7;\nconst test2 = [\n    [9, 0, 5, 1, 1, 5, 3],\n    [4, 1, 2, 1, 6, 5, 3],\n    [0, 7, 6, 1, 6, 8, 5],\n    [1, 1, 7, 8, 3, 2, 3],\n    [9, 4, 0, 7, 6, 4, 1],\n    [5, 8, 3, 2, 4, 8, 3],\n    [7, 4, 8, 4, 8, 3, 4],\n];\nconst distance2 = Array(test2M)\n    .fill([])\n    .map(() => Array(test2N).fill(INF));\nconst answer2 = dijkstra([0, 0], test2, distance2, test2N, test2M);\nconsole.log(\"answer 2\", answer2);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/기출문제/shortest_path/화성_탐사.ts\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/기출문제/shortest_path/화성_탐사.ts"](0, __webpack_exports__);
/******/ 	
/******/ })()
;
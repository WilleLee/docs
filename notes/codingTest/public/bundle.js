/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/sorting.ts":
/*!************************!*\
  !*** ./src/sorting.ts ***!
  \************************/
/***/ (() => {

eval("\n// selection sort\nconst arr1 = [7, 5, 9, 0, 3, 1, 6, 2, 4, 8];\nconsole.time(\"selection sort\");\nfor (let i = 0; i < arr1.length; i++) {\n    let minIndex = i;\n    for (let j = i + 1; j < arr1.length; j++) {\n        if (arr1[minIndex] > arr1[j]) {\n            minIndex = j;\n        }\n    }\n    const min = arr1[minIndex];\n    arr1[minIndex] = arr1[i];\n    arr1[i] = min;\n}\nconsole.timeEnd(\"selection sort\");\nconsole.log(arr1);\n// insertion sort\n// quick sort\nconst arr3 = [5, 7, 9, 0, 3, 1, 6, 2, 4, 8];\nfunction quickSort(array, start, end) {\n    if (start >= end)\n        return;\n    const pivot = start;\n    let left = start + 1;\n    let right = end;\n    while (left <= right) {\n        while (left <= end && array[left] <= array[pivot]) {\n            left++;\n        }\n        while (right > start && array[right] >= array[pivot]) {\n            right--;\n        }\n        if (left > right) {\n            const min = array[right];\n            array[right] = array[pivot];\n            array[pivot] = min;\n        }\n        else {\n            const min = array[right];\n            array[right] = array[left];\n            array[left] = min;\n        }\n    }\n    quickSort(array, start, right - 1);\n    quickSort(array, right + 1, end);\n}\nconsole.time(\"quick sort\");\nquickSort(arr3, 0, arr3.length - 1);\nconsole.timeEnd(\"quick sort\");\nconsole.log(arr3);\n// count sort\nconst arr4 = [7, 5, 9, 0, 3, 1, 6, 2, 9, 1, 4, 8, 0, 5, 2];\nconsole.time(\"count sort\");\nconst max = Math.max(...arr4);\nconst counts = Array(max + 1).fill(0);\nconst countResult = [];\nfor (let i = 0; i < arr4.length; i++) {\n    counts[arr4[i]]++;\n}\nfor (let i = 0; i < counts.length; i++) {\n    if (counts[i] > 0) {\n        for (let j = 0; j < counts[i]; j++) {\n            countResult.push(i);\n        }\n    }\n}\nconsole.timeEnd(\"count sort\");\nconsole.log(countResult);\n// 위에서 아래로\nfunction topToBottom(arr) {\n    return arr.sort((a, b) => b - a);\n}\nconsole.log(topToBottom([15, 27, 12]));\n// 성적이 낮은 순서로 학생 출력하기\nconst studentsEx = [\n    \"홍길동 95\",\n    \"이순신 77\",\n    \"김유신 65\",\n    \"강감찬 87\",\n    \"척준경 100\",\n];\nfunction lowToHighStudents(arr) {\n    let result = \"\";\n    const sorted = arr.sort((a, b) => {\n        const _a = a.split(\" \")[1];\n        const _b = b.split(\" \")[1];\n        return Number(_a) - Number(_b);\n    });\n    for (let i = 0; i < sorted.length; i++) {\n        if (i !== 0)\n            result += \" \";\n        result += sorted[i].split(\" \")[0];\n    }\n    return result;\n}\nconsole.log(lowToHighStudents(studentsEx));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/sorting.ts\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/sorting.ts"]();
/******/ 	
/******/ })()
;
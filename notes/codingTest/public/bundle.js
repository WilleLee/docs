/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/playground.ts":
/*!***************************!*\
  !*** ./src/playground.ts ***!
  \***************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n// shortest path\n/*\nconst graph = [\n  [],\n  [\n    [2, 2],\n    [3, 5],\n    [4, 1],\n  ], // 1번 노드에서 2로 가는 비용 = 2, 3으로 가는 비용 = 5 ...\n  [\n    [3, 3],\n    [4, 2],\n  ],\n  [\n    [2, 3],\n    [6, 5],\n  ],\n  [\n    [3, 3],\n    [5, 1],\n  ],\n  [\n    [3, 1],\n    [6, 2],\n  ],\n  [],\n];\n\n// dijkstra\nconst V = graph.length - 1; // 노드의 개수\nconst INF = Infinity;\n\nclass Heap {\n  heap: [number, number][]; // [distance, node]\n  constructor() {\n    this.heap = [];\n  }\n  size() {\n    return this.heap.length;\n  }\n  swap(index1: number, index2: number) {\n    [this.heap[index1], this.heap[index2]] = [\n      this.heap[index2],\n      this.heap[index1],\n    ];\n  }\n\n  add([distance, node]: [number, number]) {\n    this.heap.push([distance, node]);\n    this.bubbleUp();\n  }\n  bubbleUp() {\n    let index = this.size() - 1;\n    let parentIndex = Math.floor((index - 1) / 2);\n    while (\n      this.heap[parentIndex] &&\n      this.heap[parentIndex] > this.heap[index]\n    ) {\n      this.swap(parentIndex, index);\n      index = parentIndex;\n      parentIndex = Math.floor((index - 1) / 2);\n    }\n  }\n\n  pop() {\n    if (this.size() === 0) {\n      return;\n    }\n    if (this.size() === 1) {\n      return this.heap.pop();\n    }\n    const value = this.heap[0];\n    this.heap[0] = this.heap.pop() as [number, number];\n    this.bubbleDown();\n    return value;\n  }\n  bubbleDown() {\n    let index = 0;\n    let leftIndex = 1;\n    let rightIndex = 2;\n\n    while (\n      (this.heap[leftIndex] && this.heap[leftIndex] < this.heap[index]) ||\n      (this.heap[rightIndex] && this.heap[rightIndex] < this.heap[index])\n    ) {\n      let smallerIndex = leftIndex;\n      if (\n        this.heap[rightIndex] &&\n        this.heap[rightIndex] < this.heap[leftIndex]\n      ) {\n        smallerIndex = rightIndex;\n      }\n\n      this.swap(index, smallerIndex);\n      index = smallerIndex;\n      leftIndex = index * 2 + 1;\n      rightIndex = index * 2 + 2;\n    }\n  }\n}\n\nfunction dijkstra(start: number) {\n  const heap = new Heap();\n  const distance = Array(V + 1).fill(INF);\n\n  heap.add([0, start]);\n  distance[start] = 0;\n\n  while (heap.size() > 0) {\n    const [dist, now] = heap.pop() as [number, number];\n\n    if (distance[now] < dist) {\n      continue;\n    }\n\n    for (let i = 0; i < graph[now].length; i++) {\n      const [n, d] = graph[now][i];\n      const cost = dist + d;\n      if (cost < distance[now]) {\n        distance[now] = cost;\n        heap.add([cost, n]);\n      }\n    }\n  }\n\n  return distance;\n}\n\nconsole.time(\"dijkstra\");\nconsole.log(dijkstra(1));\nconsole.timeEnd(\"dijkstra\");\n*/\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n//\nconst URL = \"blh\";\nconst createConnection = (url) => ({\n    url,\n});\nclass DB {\n    instance;\n    static instance;\n    constructor(url) {\n        if (!DB.instance) {\n            DB.instance = createConnection(url);\n        }\n        return DB.instance;\n    }\n    connect() {\n        return this.instance;\n    }\n}\nconst a = new DB(URL);\nconst b = new DB(URL);\nconsole.log(a === b);\nclass Vehicle {\n    make;\n    model;\n    constructor(make, model) {\n        this.make = make;\n        this.model = model;\n    }\n    display() {\n        console.log(`${this.make} ${this.model}`);\n    }\n}\nclass Car extends Vehicle {\n    constructor(make, model) {\n        super(make, model);\n    }\n}\nclass Truck extends Vehicle {\n    constructor(make, model) {\n        super(make, model);\n    }\n}\nfunction vehicleFactory(type, make, model) {\n    switch (type) {\n        case \"car\":\n            return new Car(make, model);\n        case \"truck\":\n            return new Truck(make, model);\n        default:\n            throw new Error(\"Invalid vehicle type\");\n    }\n}\nconst car1 = vehicleFactory(\"car\", \"Toyota\", \"Corolla\");\nconst truck1 = vehicleFactory(\"truck\", \"Ford\", \"F150\");\ncar1.display();\ntruck1.display();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvcGxheWdyb3VuZC50cyIsIm1hcHBpbmdzIjoiO0FBQUEsZ0JBQWdCO0FBQ2hCOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0VBa0lFOztBQUVGLEVBQUU7QUFDRixNQUFNLEdBQUcsR0FBRyxLQUFLLENBQUM7QUFDbEIsTUFBTSxnQkFBZ0IsR0FBRyxDQUFDLEdBQVcsRUFBRSxFQUFFLENBQUMsQ0FBQztJQUN6QyxHQUFHO0NBQ0osQ0FBQyxDQUFDO0FBRUgsTUFBTSxFQUFFO0lBQ0MsUUFBUSxDQUFNO0lBQ3JCLE1BQU0sQ0FBQyxRQUFRLENBQU07SUFDckIsWUFBWSxHQUFXO1FBQ3JCLElBQUksQ0FBQyxFQUFFLENBQUMsUUFBUSxFQUFFLENBQUM7WUFDakIsRUFBRSxDQUFDLFFBQVEsR0FBRyxnQkFBZ0IsQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUN0QyxDQUFDO1FBQ0QsT0FBTyxFQUFFLENBQUMsUUFBUSxDQUFDO0lBQ3JCLENBQUM7SUFDRCxPQUFPO1FBQ0wsT0FBTyxJQUFJLENBQUMsUUFBUSxDQUFDO0lBQ3ZCLENBQUM7Q0FDRjtBQUVELE1BQU0sQ0FBQyxHQUFHLElBQUksRUFBRSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0FBQ3RCLE1BQU0sQ0FBQyxHQUFHLElBQUksRUFBRSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0FBRXRCLE9BQU8sQ0FBQyxHQUFHLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDO0FBRXJCLE1BQU0sT0FBTztJQUNILElBQUksQ0FBUztJQUNiLEtBQUssQ0FBUztJQUN0QixZQUFZLElBQVksRUFBRSxLQUFhO1FBQ3JDLElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDO1FBQ2pCLElBQUksQ0FBQyxLQUFLLEdBQUcsS0FBSyxDQUFDO0lBQ3JCLENBQUM7SUFDRCxPQUFPO1FBQ0wsT0FBTyxDQUFDLEdBQUcsQ0FBQyxHQUFHLElBQUksQ0FBQyxJQUFJLElBQUksSUFBSSxDQUFDLEtBQUssRUFBRSxDQUFDLENBQUM7SUFDNUMsQ0FBQztDQUNGO0FBRUQsTUFBTSxHQUFJLFNBQVEsT0FBTztJQUN2QixZQUFZLElBQVksRUFBRSxLQUFhO1FBQ3JDLEtBQUssQ0FBQyxJQUFJLEVBQUUsS0FBSyxDQUFDLENBQUM7SUFDckIsQ0FBQztDQUNGO0FBQ0QsTUFBTSxLQUFNLFNBQVEsT0FBTztJQUN6QixZQUFZLElBQVksRUFBRSxLQUFhO1FBQ3JDLEtBQUssQ0FBQyxJQUFJLEVBQUUsS0FBSyxDQUFDLENBQUM7SUFDckIsQ0FBQztDQUNGO0FBRUQsU0FBUyxjQUFjLENBQUMsSUFBWSxFQUFFLElBQVksRUFBRSxLQUFhO0lBQy9ELFFBQVEsSUFBSSxFQUFFLENBQUM7UUFDYixLQUFLLEtBQUs7WUFDUixPQUFPLElBQUksR0FBRyxDQUFDLElBQUksRUFBRSxLQUFLLENBQUMsQ0FBQztRQUM5QixLQUFLLE9BQU87WUFDVixPQUFPLElBQUksS0FBSyxDQUFDLElBQUksRUFBRSxLQUFLLENBQUMsQ0FBQztRQUNoQztZQUNFLE1BQU0sSUFBSSxLQUFLLENBQUMsc0JBQXNCLENBQUMsQ0FBQztJQUM1QyxDQUFDO0FBQ0gsQ0FBQztBQUVELE1BQU0sSUFBSSxHQUFHLGNBQWMsQ0FBQyxLQUFLLEVBQUUsUUFBUSxFQUFFLFNBQVMsQ0FBQyxDQUFDO0FBQ3hELE1BQU0sTUFBTSxHQUFHLGNBQWMsQ0FBQyxPQUFPLEVBQUUsTUFBTSxFQUFFLE1BQU0sQ0FBQyxDQUFDO0FBRXZELElBQUksQ0FBQyxPQUFPLEVBQUUsQ0FBQztBQUNmLE1BQU0sQ0FBQyxPQUFPLEVBQUUsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL2NvZGluZ190ZXN0Ly4vc3JjL3BsYXlncm91bmQudHM/ZjU1YSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBzaG9ydGVzdCBwYXRoXG4vKlxuY29uc3QgZ3JhcGggPSBbXG4gIFtdLFxuICBbXG4gICAgWzIsIDJdLFxuICAgIFszLCA1XSxcbiAgICBbNCwgMV0sXG4gIF0sIC8vIDHrsogg64W465Oc7JeQ7IScIDLroZwg6rCA64qUIOu5hOyaqSA9IDIsIDPsnLzroZwg6rCA64qUIOu5hOyaqSA9IDUgLi4uXG4gIFtcbiAgICBbMywgM10sXG4gICAgWzQsIDJdLFxuICBdLFxuICBbXG4gICAgWzIsIDNdLFxuICAgIFs2LCA1XSxcbiAgXSxcbiAgW1xuICAgIFszLCAzXSxcbiAgICBbNSwgMV0sXG4gIF0sXG4gIFtcbiAgICBbMywgMV0sXG4gICAgWzYsIDJdLFxuICBdLFxuICBbXSxcbl07XG5cbi8vIGRpamtzdHJhXG5jb25zdCBWID0gZ3JhcGgubGVuZ3RoIC0gMTsgLy8g64W465Oc7J2YIOqwnOyImFxuY29uc3QgSU5GID0gSW5maW5pdHk7XG5cbmNsYXNzIEhlYXAge1xuICBoZWFwOiBbbnVtYmVyLCBudW1iZXJdW107IC8vIFtkaXN0YW5jZSwgbm9kZV1cbiAgY29uc3RydWN0b3IoKSB7XG4gICAgdGhpcy5oZWFwID0gW107XG4gIH1cbiAgc2l6ZSgpIHtcbiAgICByZXR1cm4gdGhpcy5oZWFwLmxlbmd0aDtcbiAgfVxuICBzd2FwKGluZGV4MTogbnVtYmVyLCBpbmRleDI6IG51bWJlcikge1xuICAgIFt0aGlzLmhlYXBbaW5kZXgxXSwgdGhpcy5oZWFwW2luZGV4Ml1dID0gW1xuICAgICAgdGhpcy5oZWFwW2luZGV4Ml0sXG4gICAgICB0aGlzLmhlYXBbaW5kZXgxXSxcbiAgICBdO1xuICB9XG5cbiAgYWRkKFtkaXN0YW5jZSwgbm9kZV06IFtudW1iZXIsIG51bWJlcl0pIHtcbiAgICB0aGlzLmhlYXAucHVzaChbZGlzdGFuY2UsIG5vZGVdKTtcbiAgICB0aGlzLmJ1YmJsZVVwKCk7XG4gIH1cbiAgYnViYmxlVXAoKSB7XG4gICAgbGV0IGluZGV4ID0gdGhpcy5zaXplKCkgLSAxO1xuICAgIGxldCBwYXJlbnRJbmRleCA9IE1hdGguZmxvb3IoKGluZGV4IC0gMSkgLyAyKTtcbiAgICB3aGlsZSAoXG4gICAgICB0aGlzLmhlYXBbcGFyZW50SW5kZXhdICYmXG4gICAgICB0aGlzLmhlYXBbcGFyZW50SW5kZXhdID4gdGhpcy5oZWFwW2luZGV4XVxuICAgICkge1xuICAgICAgdGhpcy5zd2FwKHBhcmVudEluZGV4LCBpbmRleCk7XG4gICAgICBpbmRleCA9IHBhcmVudEluZGV4O1xuICAgICAgcGFyZW50SW5kZXggPSBNYXRoLmZsb29yKChpbmRleCAtIDEpIC8gMik7XG4gICAgfVxuICB9XG5cbiAgcG9wKCkge1xuICAgIGlmICh0aGlzLnNpemUoKSA9PT0gMCkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBpZiAodGhpcy5zaXplKCkgPT09IDEpIHtcbiAgICAgIHJldHVybiB0aGlzLmhlYXAucG9wKCk7XG4gICAgfVxuICAgIGNvbnN0IHZhbHVlID0gdGhpcy5oZWFwWzBdO1xuICAgIHRoaXMuaGVhcFswXSA9IHRoaXMuaGVhcC5wb3AoKSBhcyBbbnVtYmVyLCBudW1iZXJdO1xuICAgIHRoaXMuYnViYmxlRG93bigpO1xuICAgIHJldHVybiB2YWx1ZTtcbiAgfVxuICBidWJibGVEb3duKCkge1xuICAgIGxldCBpbmRleCA9IDA7XG4gICAgbGV0IGxlZnRJbmRleCA9IDE7XG4gICAgbGV0IHJpZ2h0SW5kZXggPSAyO1xuXG4gICAgd2hpbGUgKFxuICAgICAgKHRoaXMuaGVhcFtsZWZ0SW5kZXhdICYmIHRoaXMuaGVhcFtsZWZ0SW5kZXhdIDwgdGhpcy5oZWFwW2luZGV4XSkgfHxcbiAgICAgICh0aGlzLmhlYXBbcmlnaHRJbmRleF0gJiYgdGhpcy5oZWFwW3JpZ2h0SW5kZXhdIDwgdGhpcy5oZWFwW2luZGV4XSlcbiAgICApIHtcbiAgICAgIGxldCBzbWFsbGVySW5kZXggPSBsZWZ0SW5kZXg7XG4gICAgICBpZiAoXG4gICAgICAgIHRoaXMuaGVhcFtyaWdodEluZGV4XSAmJlxuICAgICAgICB0aGlzLmhlYXBbcmlnaHRJbmRleF0gPCB0aGlzLmhlYXBbbGVmdEluZGV4XVxuICAgICAgKSB7XG4gICAgICAgIHNtYWxsZXJJbmRleCA9IHJpZ2h0SW5kZXg7XG4gICAgICB9XG5cbiAgICAgIHRoaXMuc3dhcChpbmRleCwgc21hbGxlckluZGV4KTtcbiAgICAgIGluZGV4ID0gc21hbGxlckluZGV4O1xuICAgICAgbGVmdEluZGV4ID0gaW5kZXggKiAyICsgMTtcbiAgICAgIHJpZ2h0SW5kZXggPSBpbmRleCAqIDIgKyAyO1xuICAgIH1cbiAgfVxufVxuXG5mdW5jdGlvbiBkaWprc3RyYShzdGFydDogbnVtYmVyKSB7XG4gIGNvbnN0IGhlYXAgPSBuZXcgSGVhcCgpO1xuICBjb25zdCBkaXN0YW5jZSA9IEFycmF5KFYgKyAxKS5maWxsKElORik7XG5cbiAgaGVhcC5hZGQoWzAsIHN0YXJ0XSk7XG4gIGRpc3RhbmNlW3N0YXJ0XSA9IDA7XG5cbiAgd2hpbGUgKGhlYXAuc2l6ZSgpID4gMCkge1xuICAgIGNvbnN0IFtkaXN0LCBub3ddID0gaGVhcC5wb3AoKSBhcyBbbnVtYmVyLCBudW1iZXJdO1xuXG4gICAgaWYgKGRpc3RhbmNlW25vd10gPCBkaXN0KSB7XG4gICAgICBjb250aW51ZTtcbiAgICB9XG5cbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGdyYXBoW25vd10ubGVuZ3RoOyBpKyspIHtcbiAgICAgIGNvbnN0IFtuLCBkXSA9IGdyYXBoW25vd11baV07XG4gICAgICBjb25zdCBjb3N0ID0gZGlzdCArIGQ7XG4gICAgICBpZiAoY29zdCA8IGRpc3RhbmNlW25vd10pIHtcbiAgICAgICAgZGlzdGFuY2Vbbm93XSA9IGNvc3Q7XG4gICAgICAgIGhlYXAuYWRkKFtjb3N0LCBuXSk7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIGRpc3RhbmNlO1xufVxuXG5jb25zb2xlLnRpbWUoXCJkaWprc3RyYVwiKTtcbmNvbnNvbGUubG9nKGRpamtzdHJhKDEpKTtcbmNvbnNvbGUudGltZUVuZChcImRpamtzdHJhXCIpO1xuKi9cblxuLy9cbmNvbnN0IFVSTCA9IFwiYmxoXCI7XG5jb25zdCBjcmVhdGVDb25uZWN0aW9uID0gKHVybDogc3RyaW5nKSA9PiAoe1xuICB1cmwsXG59KTtcblxuY2xhc3MgREIge1xuICBwdWJsaWMgaW5zdGFuY2U6IGFueTtcbiAgc3RhdGljIGluc3RhbmNlOiBhbnk7XG4gIGNvbnN0cnVjdG9yKHVybDogc3RyaW5nKSB7XG4gICAgaWYgKCFEQi5pbnN0YW5jZSkge1xuICAgICAgREIuaW5zdGFuY2UgPSBjcmVhdGVDb25uZWN0aW9uKHVybCk7XG4gICAgfVxuICAgIHJldHVybiBEQi5pbnN0YW5jZTtcbiAgfVxuICBjb25uZWN0KCkge1xuICAgIHJldHVybiB0aGlzLmluc3RhbmNlO1xuICB9XG59XG5cbmNvbnN0IGEgPSBuZXcgREIoVVJMKTtcbmNvbnN0IGIgPSBuZXcgREIoVVJMKTtcblxuY29uc29sZS5sb2coYSA9PT0gYik7XG5cbmNsYXNzIFZlaGljbGUge1xuICBwcml2YXRlIG1ha2U6IHN0cmluZztcbiAgcHJpdmF0ZSBtb2RlbDogc3RyaW5nO1xuICBjb25zdHJ1Y3RvcihtYWtlOiBzdHJpbmcsIG1vZGVsOiBzdHJpbmcpIHtcbiAgICB0aGlzLm1ha2UgPSBtYWtlO1xuICAgIHRoaXMubW9kZWwgPSBtb2RlbDtcbiAgfVxuICBkaXNwbGF5KCkge1xuICAgIGNvbnNvbGUubG9nKGAke3RoaXMubWFrZX0gJHt0aGlzLm1vZGVsfWApO1xuICB9XG59XG5cbmNsYXNzIENhciBleHRlbmRzIFZlaGljbGUge1xuICBjb25zdHJ1Y3RvcihtYWtlOiBzdHJpbmcsIG1vZGVsOiBzdHJpbmcpIHtcbiAgICBzdXBlcihtYWtlLCBtb2RlbCk7XG4gIH1cbn1cbmNsYXNzIFRydWNrIGV4dGVuZHMgVmVoaWNsZSB7XG4gIGNvbnN0cnVjdG9yKG1ha2U6IHN0cmluZywgbW9kZWw6IHN0cmluZykge1xuICAgIHN1cGVyKG1ha2UsIG1vZGVsKTtcbiAgfVxufVxuXG5mdW5jdGlvbiB2ZWhpY2xlRmFjdG9yeSh0eXBlOiBzdHJpbmcsIG1ha2U6IHN0cmluZywgbW9kZWw6IHN0cmluZykge1xuICBzd2l0Y2ggKHR5cGUpIHtcbiAgICBjYXNlIFwiY2FyXCI6XG4gICAgICByZXR1cm4gbmV3IENhcihtYWtlLCBtb2RlbCk7XG4gICAgY2FzZSBcInRydWNrXCI6XG4gICAgICByZXR1cm4gbmV3IFRydWNrKG1ha2UsIG1vZGVsKTtcbiAgICBkZWZhdWx0OlxuICAgICAgdGhyb3cgbmV3IEVycm9yKFwiSW52YWxpZCB2ZWhpY2xlIHR5cGVcIik7XG4gIH1cbn1cblxuY29uc3QgY2FyMSA9IHZlaGljbGVGYWN0b3J5KFwiY2FyXCIsIFwiVG95b3RhXCIsIFwiQ29yb2xsYVwiKTtcbmNvbnN0IHRydWNrMSA9IHZlaGljbGVGYWN0b3J5KFwidHJ1Y2tcIiwgXCJGb3JkXCIsIFwiRjE1MFwiKTtcblxuY2FyMS5kaXNwbGF5KCk7XG50cnVjazEuZGlzcGxheSgpO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/playground.ts\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/playground.ts"](0, __webpack_exports__);
/******/ 	
/******/ })()
;